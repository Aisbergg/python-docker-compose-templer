{% set development = development|default(false) %}
{% set deployment_name = deployment_name|default('reverse-proxy') %}

version: '3.7'

services:
  {{ deployment_name }}:
    image: traefik:1.7.9
    command: --configfile='/container/traefik.toml'
    healthcheck:
      test: ["CMD", "/traefik", "healthcheck", "--configfile=/container/traefik.toml"]
      interval: 5m
      timeout: 10s
      retries: 3
      start_period: 15s
    networks:
    {% for network in stacks|default([]) %}
      {{ network }}_reverse-proxy:
        aliases:
          - reverse-proxy
          - reverse-proxy.docker
          - reverse-proxy.{{ stack_name }}.docker
    {% endfor %}
    {% if not development|default(false) %}
    expose:
      # traefik dashboard
      - "8000"
    {% endif %}
    ports:
      # Ports must be exposed in 'host' mode instead of 'ingress', otherwise the
      # incoming requests IP will be lost. For more information see:
      # https://github.com/moby/moby/issues/25526
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      {% if development|default(false) %}
      - target: 8000
        published: 8000
        protocol: tcp
        mode: host
      {% endif %}
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "{{ base_volume_dir|mandatory }}/{{ stack_name }}/{{ deployment_name }}:/container"
    deploy:
      labels:
        - "bindMountOwner=0:0"
      placement:
        constraints: [node.role == manager]
      mode: global
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        reservations:
          memory: 60M
        limits:
          memory: "{{ memory|default('400MB') }}"

  error-pages:
    image: nginx:1.15-alpine
    command: "nginx -g 'daemon off;' -c /container/nginx.conf"
    networks:
      {{ stack_name }}_reverse-proxy:
        aliases:
          - error-pages.{{ stack_name }}.docker
    expose:
      - "8080"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "{{ base_volume_dir|mandatory }}/{{ stack_name }}/{{ deployment_name }}/error-pages:/container"
    deploy:
      labels:
        - "bindMountOwner=100:101"
        - "bindMountMode=0770"
        - "updateService=true"
        - "traefik.enable=true"
        - "traefik.docker.network={{ stack_name }}_reverse-proxy"
        - "traefik.frontend.rule=HostRegexp:{catchall:.*};ReplacePath: /raise-503-error"
        - "traefik.frontend.priority=1"
        - "traefik.port=8080"
        - "traefik.weight=10"
        - "traefik.backend=error"
        - "traefik.backend.loadbalancer.method=drr"
        - "traefik.backend.loadbalancer.stickiness=false"
        - "traefik.backend.loadbalancer.swarm=true"
      mode: global
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
      resources:
        limits:
          cpus: '0.1'
          memory: "{{ memory|default('20MB') }}"
      update_config:
        parallelism: 1
        delay: 10s

networks:
{% for network in stacks|default([]) %}
  {{ network }}_reverse-proxy:
    name: {{ network }}_reverse-proxy
    driver: overlay
    attachable: true
    {% if network == stack_name %}
    # use explicit subnet
    ipam:
      driver: default
      config:
        - subnet: 10.10.10.0/24
    {% endif %}
{% endfor %}
